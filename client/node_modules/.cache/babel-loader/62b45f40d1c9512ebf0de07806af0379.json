{"ast":null,"code":"import _classCallCheck from \"/Users/elba/Desktop/final-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elba/Desktop/final-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elba/Desktop/final-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elba/Desktop/final-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elba/Desktop/final-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elba/Desktop/final-project/client/src/components/pages/Profile.jsx\";\nimport React, { Component } from 'react';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n\n    _this.getUser = function () {\n      axios.get(\"https://api.unsplash.com/users/elbachimilio/?client_id=\".concat(process.env.UNSPLASH_ACCESSKEY)).then(function (response) {\n        console.log(response);\n        res.json(response.data);\n      }).catch(function (err) {\n        return next(err);\n      });\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      username: undefined,\n      name: undefined,\n      profile_img: undefined\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.unsplash.com/\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          items: result.items\n        });\n      }, function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"))}\");\n      }\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile; // const passport = require('passport')\n// const LocalStrategy = require('passport-local').Strategy\n// const User = require('../models/User')\n// const bcrypt = require('bcrypt')\n// passport.use(\n//   new LocalStrategy(\n//     {\n//       usernameField: 'username',\n//       passwordField: 'password',\n//     },\n//     (username, password, done) => {\n//       User.findOne({ username })\n//         .then(foundUser => {\n//           if (!foundUser) {\n//             done(null, false, { message: 'Incorrect username' })\n//             return\n//           }\n//           if (!bcrypt.compareSync(password, foundUser.password)) {\n//             done(null, false, { message: 'Incorrect password' })\n//             return\n//           }\n//           done(null, foundUser)\n//         })\n//         .catch(err => done(err))\n//     }","map":{"version":3,"sources":["/Users/elba/Desktop/final-project/client/src/components/pages/Profile.jsx"],"names":["React","Component","Profile","props","getUser","axios","get","process","env","UNSPLASH_ACCESSKEY","then","response","console","log","res","json","data","catch","err","next","state","error","isLoaded","username","undefined","name","profile_img","fetch","result","setState","items","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UA8BnBC,OA9BmB,GA8BT,YAAM;AACdC,MAAAA,KAAK,CAACC,GAAN,kEAAoEC,OAAO,CAACC,GAAR,CAAYC,kBAAhF,GACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAG,QAAAA,GAAG,CAACC,IAAJ,CAASJ,QAAQ,CAACK,IAAlB;AACD,OAJH,EAIKC,KAJL,CAIW,UAAAC,GAAG;AAAA,eAAIC,IAAI,CAACD,GAAD,CAAR;AAAA,OAJd;AAKD,KApCkB;;AAEjB,UAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,QAAQ,EAAEC,SAHC;AAIXC,MAAAA,IAAI,EAAED,SAJK;AAKXE,MAAAA,WAAW,EAAEF;AALF,KAAb;AAFiB;AASlB;;;;wCAEmB;AAAA;;AAClBG,MAAAA,KAAK,CAAC,2BAAD,CAAL,CACGjB,IADH,CACQ,UAAAI,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGL,IAFH,CAGI,UAACkB,MAAD,EAAY;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZQ,UAAAA,KAAK,EAAEF,MAAM,CAACE;AAFF,SAAd;AAID,OARL,EASI,UAACT,KAAD,EAAW;AACT,QAAA,MAAI,CAACQ,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OAdL;AAgBD;;;6BAUQ;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBQ,KADlB,eACkBA,KADlB;;AAEP,UAAIT,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACU,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AASD;AACF;;;;EAxDmBrB,S;;AA2DtB,eAAeC,OAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      username: undefined,\n      name: undefined,\n      profile_img: undefined,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.unsplash.com/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  getUser = () => {\n    axios.get(`https://api.unsplash.com/users/elbachimilio/?client_id=${process.env.UNSPLASH_ACCESSKEY}`)\n      .then((response) => {\n        console.log(response)\n        res.json(response.data)\n      }).catch(err => next(err))\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {/* {items.map(item => (\n            <li key={item.name}>\n              {item.name} {item.price} */}\n          {/* </li> */}\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n\nexport default Profile;\n\n// const passport = require('passport')\n// const LocalStrategy = require('passport-local').Strategy\n// const User = require('../models/User')\n// const bcrypt = require('bcrypt')\n\n// passport.use(\n//   new LocalStrategy(\n//     {\n//       usernameField: 'username',\n//       passwordField: 'password',\n//     },\n//     (username, password, done) => {\n//       User.findOne({ username })\n//         .then(foundUser => {\n//           if (!foundUser) {\n//             done(null, false, { message: 'Incorrect username' })\n//             return\n//           }\n\n//           if (!bcrypt.compareSync(password, foundUser.password)) {\n//             done(null, false, { message: 'Incorrect password' })\n//             return\n//           }\n\n//           done(null, foundUser)\n//         })\n//         .catch(err => done(err))\n//     }\n"]},"metadata":{},"sourceType":"module"}